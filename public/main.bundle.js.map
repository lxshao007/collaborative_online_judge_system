{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/components/editor/editor.component.css","./src/app/components/editor/editor.component.html","./src/app/components/editor/editor.component.ts","./src/app/components/new-problem/new-problem.component.css","./src/app/components/new-problem/new-problem.component.html","./src/app/components/new-problem/new-problem.component.ts","./src/app/components/problem-detail/problem-detail.component.css","./src/app/components/problem-detail/problem-detail.component.html","./src/app/components/problem-detail/problem-detail.component.ts","./src/app/components/problem-list/problem-list.component.css","./src/app/components/problem-list/problem-list.component.html","./src/app/components/problem-list/problem-list.component.ts","./src/app/service/data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\\n\\n \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FormsModule } from '@angular/forms'\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { DataService } from './service/data.service';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { routing } from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { EditorComponent } from './components/editor/editor.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import{ Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\n\nconst routes: Routes = [\n    {\n        path:'',\n        redirectTo: 'problems',\n        pathMatch:'full'\n    },\n    {\n        path:'problems',\n        component:ProblemListComponent\n    },\n    {\n        path:'problems/:id',\n        component:ProblemDetailComponent\n    },\n    {\n        path:'**',\n        redirectTo:'problems'\n    }\n\n]\n\nexport const routing = RouterModule.forRoot(routes);\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routes.ts","module.exports = \"@media screen {\\n    #editor {\\n      height: 600px;\\n    }\\n    .lang-select {\\n      width: 100px;\\n      margin-right: 10px;\\n    }\\n    header .btn {\\n      margin: 0 5px;\\n    }\\n    footer .btn {\\n      margin: 0 5px;\\n    }\\n    .editor-footer, .editor-header {\\n      margin: 10px 0;\\n    }\\n    .cursor {\\n      background: rgba(0, 250, 0, 0.5);\\n      z-index: 40;\\n      width: 2px !important;\\n    } \\n}\\n \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/editor/editor.component.css\n// module id = ./src/app/components/editor/editor.component.css\n// module chunks = main","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <!-- switch language, call setLanguage(language) -->\\n    <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\" \\n    [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n        {{language}}\\n      </option>\\n    </select>\\n    <!-- reset button trigger modal-->\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" \\n    data-target=\\\"#myModal\\\">\\n      Reset\\n    </button>\\n\\n    <!-- Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n    aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n\\n          <!-- header include button and title -->\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n\\n          <!-- body -->\\n          <div class=\\\"modal-body\\\">\\n            you will lose current code in the editor, are you sure?\\n          </div>\\n\\n          <!-- footer -->\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">cancel</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"resetEditor()\\\">\\n              Reset\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n\\n  <!-- editor -->\\n  <div class=\\\"row\\\">\\n    <div id=\\\"editor\\\"></div>\\n  </div>\\n\\n  <footer class=\\\"editor-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submit()\\\">\\n      Submit Solution\\n    </button>\\n  </footer>\\n</section>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/editor/editor.component.html\n// module id = ./src/app/components/editor/editor.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n\n  languages: string[] = ['Java', 'Python'];\n  language: string = 'Java';\n  editor: any;\n  defaultContent = {\n    \"Java\": `public class Example {\n      public static void main(String[] args) {\n      // Type your Java code here\n      }\n    }`,\n    'Python': `class Solution:\n    def example():\n        # write your python code here.\n    `\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n    //\"editor\" is the id in html\n    this.editor = ace.edit(\"editor\");\n    this.editor.setTheme(\"ace/theme/eclipse\");\n    this.editor.session.setMode(\"ace/mode/java\");\n    //default set\n    this.editor.setValue(this.defaultContent[this.language]);\n    \n  }\n\n  resetEditor(): void {\n    this.editor.setValue(this.defaultContent[this.language]);\n    this.editor.getSession().setMode(\n      \"ace/mode/\" + this.language.toLowerCase()\n    );\n  }\n\n  setLanguage(language: string): void {\n    this.language = language;\n    this.resetEditor();\n  }\n\n  submit(): void {\n    let user_code = this.editor.getValue();\n    console.log(user_code);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/editor/editor.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/new-problem/new-problem.component.css\n// module id = ./src/app/components/new-problem/new-problem.component.css\n// module chunks = main","module.exports = \"<!-- <p>\\n  new-problem works!\\n</p> -->\\n\\n<div>\\n    <form #formRef=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"problemName\\\">Problem Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n        name=\\\"problemName\\\" placeholder=\\\"Input problem name\\\" required\\n        [(ngModel)]=\\\"newProblem.name\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"problemDesc\\\">Problem Description</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n        name=\\\"problemDesc\\\" placeholder=\\\"Input description\\\" required\\n        [(ngModel)]=\\\"newProblem.desc\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"difficulty\\\">Difficulty</label>\\n        <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n        [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n      </select>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\"\\n          (click)=\\\"addProblem()\\\">Add prolbem</button>\\n        </div>\\n      </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/new-problem/new-problem.component.html\n// module id = ./src/app/components/new-problem/new-problem.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model'\nimport { DataService } from '../../service/data.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: '',\n  desc: '',\n  difficulty: 'easy'\n})\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  difficulties: string[] = ['easy', 'medium', 'hard', 'super'];\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n\n  addProblem(){\n    this.dataService.addProblem(this.newProblem);\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/new-problem/new-problem.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/problem-detail/problem-detail.component.css\n// module id = ./src/app/components/problem-detail/problem-detail.component.css\n// module chunks = main","module.exports = \"<!-- <p>\\n  problem-detail works!\\n</p> -->\\n<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12 col-md-4\\\">\\n      <div>\\n        <h2>{{problem.id}}.{{problem.name}}</h2>\\n        <p>{{problem.desc}}</p>\\n      </div>\\n    </div>\\n    <div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n      <app-editor></app-editor>\\n    </div>\\n  </div>  \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/problem-detail/problem-detail.component.html\n// module id = ./src/app/components/problem-detail/problem-detail.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../service/data.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params =>{\n      // this.problem = this.dataService.getProblem(+params['id']);\n      this.dataService.getProblem(+params['id'])\n        .then(problem => this.problem = problem);\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/problem-detail/problem-detail.component.ts","module.exports = \"\\n.difficult {\\n min-width: 65px;\\n margin-right: 18px;\\n}\\n.label.difficulty {\\n padding-top: 0.6em;\\n color: #fbfdfa;\\n font-size: 12px;\\n}\\n.title {\\n font-size: 1.2em;\\n}\\n.diff-easy {\\n background-color: #42ebf4;\\n}\\n.diff-medium {\\n background-color: #92cf5c;\\n}\\n.diff-hard {\\n backgroud-color: #dd8dle;\\n}\\n.diff-super{\\n background-color: #8d16e2;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/problem-list/problem-list.component.css\n// module id = ./src/app/components/problem-list/problem-list.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container\\\">\\n   <div class=\\\"list-group\\\">\\n     <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\"\\n     [routerLink]=\\\"['/problems', problem.id]\\\">\\n       <span class=\\\"{{'pull-left badge difficulty diff-' +\\nproblem.difficulty.toLocaleLowerCase()}}\\\">\\n         {{problem.difficulty}}\\n</span>\\n       <strong class=\\\"title\\\">{{problem.id}}. {{problem.name}}</strong>\\n     </a>\\n   </div>\\n </div>\\n\\n <div class=\\\"container\\\">\\n    <app-new-problem></app-new-problem>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/problem-list/problem-list.component.html\n// module id = ./src/app/components/problem-list/problem-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../service/data.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[];\n  subsriptionProblems: Subscription;\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n    // this.problems = this.dataService.getProblems();\n    this.getProblems();\n  }\n  getProblems() {\n    this.subsriptionProblems = this.dataService.getProblems()\n      .subscribe(problems => this.problems = problems);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/problem-list/problem-list.component.ts","import { Injectable } from '@angular/core';\nimport { Problem } from '../models/problem.model';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n\n@Injectable()\nexport class DataService {\n  //list of problems\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private httpClient: HttpClient) { }\n\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        this._problemSource.next(res);\n      })\n      .catch(this.handleError);\n    return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res: any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    const options = {headers: new HttpHeaders( {\n      'Content-Type': 'application/json'})};\n      return this.httpClient.post('api/v1/problems', problem, options)\n        .toPromise()\n        .then((res: any) => {\n          //update the _problemSource\n          this.getProblems();\n          return res;\n        })\n        .catch(this.handleError);\n  }\n\n  private handleError(err: any): Promise<any> {\n    console.error('an error occured', err);\n    return Promise.reject(err.body || err);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/data.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}